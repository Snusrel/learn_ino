# -*- coding: utf-8 -*-
""Копия блокнота "Numpy_solutions.ipynb""

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/181iD27807fp8zSlVTfa_QTXmuFC-LnsU

Импортируйте библиотеку NumPy
---
"""

import numpy as np

"""Создайте массив из 10 нулей

"""

zeros = np.zeros(10)
print(zeros)

"""Создайте массив из 10 единиц"""

ones = np.ones(10)
print(ones)

"""Создайте массив из 10 пятерок"""

fives = np.full(10, 5)
print(fives)

"""Создать массив из целых чисел от 10 до 50"""

from_10_to_50 = np.arange(10, 51)
print(from_10_to_50)

"""Создать массив из четных чисел от 10 до 50"""

from_10_to_50_step_2 = np.arange(10, 51, 2)
print(from_10_to_50_step_2)

"""Создать матрицу 3х3 с числами от 0 до 8"""

matrix = np.arange(0, 9).reshape(3, 3)
print(matrix)

"""Создать единичную матрицу 3x3"""

matrix_ones = np.eye(3)
print(matrix_ones)

"""Используйте NumPy для генерации случайного числа от 0 до 1"""

random_num = np.random.random(1)
print(random_num)

"""Используйте NumPy для генерации массива из 25 случайных чисел,взятых из стандартного нормального распределения"""

list_of_rand_nums = np.random.randn(25)
print(list_of_rand_nums)

"""Создайте следующую матрицу используя функции библиотеки NumPy"""

matrix_interval = np.linspace(0.01, 1, 100)
print(matrix_interval)

"""Стартовая матрица"""

mat = np.arange(1,26).reshape(5,5)
print(mat)

"""Необходимо написать код который вернет следующую матрицуиз стартовой:"""

print(mat[2:, 1:])

"""Написать код обращения к элементу который вернет значение  20 изстартовой матрицы задачи"""

print(mat[3, -1])

"""Написать код к стартовой матрице задачи l , который воспроизводитвывод, показанный ниже"""

print(mat[:-2, 1])

"""Написать код к стартовой матрице задачи l , который воспроизводитвывод, показанный ниже"""

print(mat[-1])

"""Написать код к стартовой матрице задачи l , который воспроизводитвывод, показанный ниже"""

print(mat[-2:])

"""Получить сумму всех значений в стартовой матрице mat"""

mat2 = sum(mat)
print(sum(mat2))

"""Получить стандартное отклонение в стартовой матрице mat"""

print(np.std(mat))

"""Получить сумму значений в колонках в стартовой матрице mat"""

print(np.sum(mat, axis = 0))
